#ifndef UIDMMPREFS_H
#define UIDMMPREFS_H

#include <qvariant.h>
#include <prefwidget.h>


#include <Qt3Support/Q3ButtonGroup>
#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <QtGui/QButtonGroup>
#include <QtGui/QCheckBox>
#include <QtGui/QComboBox>
#include <QtGui/QGridLayout>
#include <QtGui/QHBoxLayout>
#include <QtGui/QHeaderView>
#include <QtGui/QLabel>
#include <QtGui/QLineEdit>
#include <QtGui/QPushButton>
#include <QtGui/QSpacerItem>
#include <QtGui/QSpinBox>
#include <QtGui/QToolButton>
#include <QtGui/QVBoxLayout>
#include <prefwidget.h>
#include "prefwidget.h"

QT_BEGIN_NAMESPACE

class Ui_UIDmmPrefs
{
public:
    QVBoxLayout *vboxLayout;
    QLabel *ui_hint;
    QHBoxLayout *hboxLayout;
    QComboBox *ui_model;
    QLineEdit *ui_filename;
    QToolButton *ui_load;
    QToolButton *ui_save;
    Q3ButtonGroup *ButtonGroup11;
    QGridLayout *gridLayout;
    QLabel *ui_parityLabel;
    QComboBox *parityCombo;
    QComboBox *displayCombo;
    QComboBox *bitsCombo;
    QLabel *ui_bitsLabel;
    QComboBox *stopBitsCombo;
    QLabel *TextLabel2;
    QHBoxLayout *hboxLayout1;
    QComboBox *port;
    QSpinBox *portNumber;
    QPushButton *ui_scanPorts;
    QComboBox *baudRate;
    QLabel *ui_displayLabel;
    QLabel *ui_stopLabel;
    QLabel *ui_baudLabel;
    QCheckBox *ui_externalSetup;
    QHBoxLayout *hboxLayout2;
    QCheckBox *uirts;
    QCheckBox *uicts;
    QCheckBox *uidsr;
    QCheckBox *uidtr;
    QSpacerItem *spacer3;
    Q3ButtonGroup *ui_protocol;
    QGridLayout *gridLayout1;
    QComboBox *protocolCombo;
    QLabel *TextLabel1_4;
    QSpinBox *ui_numValues;
    QSpacerItem *Spacer1;
    QSpacerItem *Spacer1_3;
    QLabel *message2;
    QLabel *message;

    void setupUi(PrefWidget *UIDmmPrefs)
    {
        if (UIDmmPrefs->objectName().isEmpty())
            UIDmmPrefs->setObjectName(QString::fromUtf8("UIDmmPrefs"));
        UIDmmPrefs->resize(633, 679);
        vboxLayout = new QVBoxLayout(UIDmmPrefs);
        vboxLayout->setSpacing(5);
        vboxLayout->setContentsMargins(10, 10, 10, 10);
        vboxLayout->setObjectName(QString::fromUtf8("vboxLayout"));
        ui_hint = new QLabel(UIDmmPrefs);
        ui_hint->setObjectName(QString::fromUtf8("ui_hint"));
        QSizePolicy sizePolicy(static_cast<QSizePolicy::Policy>(1), static_cast<QSizePolicy::Policy>(0));
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(ui_hint->sizePolicy().hasHeightForWidth());
        ui_hint->setSizePolicy(sizePolicy);
        ui_hint->setFrameShape(QFrame::NoFrame);
        ui_hint->setWordWrap(false);

        vboxLayout->addWidget(ui_hint);

        hboxLayout = new QHBoxLayout();
        hboxLayout->setSpacing(5);
        hboxLayout->setObjectName(QString::fromUtf8("hboxLayout"));
        ui_model = new QComboBox(UIDmmPrefs);
        ui_model->setObjectName(QString::fromUtf8("ui_model"));
        ui_model->setAutoCompletion(true);

        hboxLayout->addWidget(ui_model);

        ui_filename = new QLineEdit(UIDmmPrefs);
        ui_filename->setObjectName(QString::fromUtf8("ui_filename"));
        ui_filename->setEnabled(false);
        ui_filename->setReadOnly(true);

        hboxLayout->addWidget(ui_filename);

        ui_load = new QToolButton(UIDmmPrefs);
        ui_load->setObjectName(QString::fromUtf8("ui_load"));
        ui_load->setEnabled(false);
        const QIcon icon = qt_get_icon(image0_ID);
        ui_load->setIcon(icon);

        hboxLayout->addWidget(ui_load);

        ui_save = new QToolButton(UIDmmPrefs);
        ui_save->setObjectName(QString::fromUtf8("ui_save"));
        ui_save->setEnabled(false);
        const QIcon icon1 = qt_get_icon(image1_ID);
        ui_save->setIcon(icon1);

        hboxLayout->addWidget(ui_save);


        vboxLayout->addLayout(hboxLayout);

        ButtonGroup11 = new Q3ButtonGroup(UIDmmPrefs);
        ButtonGroup11->setObjectName(QString::fromUtf8("ButtonGroup11"));
        ButtonGroup11->setColumnLayout(0, Qt::Vertical);
        ButtonGroup11->layout()->setSpacing(5);
        ButtonGroup11->layout()->setContentsMargins(10, 10, 10, 10);
        gridLayout = new QGridLayout();
        QBoxLayout *boxlayout = qobject_cast<QBoxLayout *>(ButtonGroup11->layout());
        if (boxlayout)
            boxlayout->addLayout(gridLayout);
        gridLayout->setAlignment(Qt::AlignTop);
        gridLayout->setObjectName(QString::fromUtf8("gridLayout"));
        ui_parityLabel = new QLabel(ButtonGroup11);
        ui_parityLabel->setObjectName(QString::fromUtf8("ui_parityLabel"));
        ui_parityLabel->setAlignment(Qt::AlignVCenter|Qt::AlignRight);
        ui_parityLabel->setWordWrap(false);

        gridLayout->addWidget(ui_parityLabel, 3, 0, 1, 1);

        parityCombo = new QComboBox(ButtonGroup11);
        parityCombo->setObjectName(QString::fromUtf8("parityCombo"));

        gridLayout->addWidget(parityCombo, 3, 1, 1, 1);

        displayCombo = new QComboBox(ButtonGroup11);
        displayCombo->setObjectName(QString::fromUtf8("displayCombo"));

        gridLayout->addWidget(displayCombo, 3, 3, 1, 1);

        bitsCombo = new QComboBox(ButtonGroup11);
        bitsCombo->setObjectName(QString::fromUtf8("bitsCombo"));

        gridLayout->addWidget(bitsCombo, 2, 1, 1, 1);

        ui_bitsLabel = new QLabel(ButtonGroup11);
        ui_bitsLabel->setObjectName(QString::fromUtf8("ui_bitsLabel"));
        ui_bitsLabel->setAlignment(Qt::AlignVCenter|Qt::AlignRight);
        ui_bitsLabel->setWordWrap(false);

        gridLayout->addWidget(ui_bitsLabel, 2, 0, 1, 1);

        stopBitsCombo = new QComboBox(ButtonGroup11);
        stopBitsCombo->setObjectName(QString::fromUtf8("stopBitsCombo"));

        gridLayout->addWidget(stopBitsCombo, 2, 3, 1, 1);

        TextLabel2 = new QLabel(ButtonGroup11);
        TextLabel2->setObjectName(QString::fromUtf8("TextLabel2"));
        TextLabel2->setAlignment(Qt::AlignVCenter|Qt::AlignRight);
        TextLabel2->setWordWrap(false);

        gridLayout->addWidget(TextLabel2, 1, 0, 1, 1);

        hboxLayout1 = new QHBoxLayout();
        hboxLayout1->setSpacing(2);
        hboxLayout1->setContentsMargins(0, 0, 0, 0);
        hboxLayout1->setObjectName(QString::fromUtf8("hboxLayout1"));
        port = new QComboBox(ButtonGroup11);
        port->setObjectName(QString::fromUtf8("port"));
        QSizePolicy sizePolicy1(static_cast<QSizePolicy::Policy>(3), static_cast<QSizePolicy::Policy>(0));
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(port->sizePolicy().hasHeightForWidth());
        port->setSizePolicy(sizePolicy1);

        hboxLayout1->addWidget(port);

        portNumber = new QSpinBox(ButtonGroup11);
        portNumber->setObjectName(QString::fromUtf8("portNumber"));

        hboxLayout1->addWidget(portNumber);

        ui_scanPorts = new QPushButton(ButtonGroup11);
        ui_scanPorts->setObjectName(QString::fromUtf8("ui_scanPorts"));

        hboxLayout1->addWidget(ui_scanPorts);


        gridLayout->addLayout(hboxLayout1, 1, 1, 1, 1);

        baudRate = new QComboBox(ButtonGroup11);
        baudRate->setObjectName(QString::fromUtf8("baudRate"));

        gridLayout->addWidget(baudRate, 1, 3, 1, 1);

        ui_displayLabel = new QLabel(ButtonGroup11);
        ui_displayLabel->setObjectName(QString::fromUtf8("ui_displayLabel"));
        ui_displayLabel->setAlignment(Qt::AlignVCenter|Qt::AlignRight);
        ui_displayLabel->setWordWrap(false);

        gridLayout->addWidget(ui_displayLabel, 3, 2, 1, 1);

        ui_stopLabel = new QLabel(ButtonGroup11);
        ui_stopLabel->setObjectName(QString::fromUtf8("ui_stopLabel"));
        ui_stopLabel->setAlignment(Qt::AlignVCenter|Qt::AlignRight);
        ui_stopLabel->setWordWrap(false);

        gridLayout->addWidget(ui_stopLabel, 2, 2, 1, 1);

        ui_baudLabel = new QLabel(ButtonGroup11);
        ui_baudLabel->setObjectName(QString::fromUtf8("ui_baudLabel"));
        ui_baudLabel->setAlignment(Qt::AlignVCenter|Qt::AlignRight);
        ui_baudLabel->setWordWrap(false);

        gridLayout->addWidget(ui_baudLabel, 1, 2, 1, 1);

        ui_externalSetup = new QCheckBox(ButtonGroup11);
        ui_externalSetup->setObjectName(QString::fromUtf8("ui_externalSetup"));

        gridLayout->addWidget(ui_externalSetup, 0, 0, 1, 4);

        hboxLayout2 = new QHBoxLayout();
        hboxLayout2->setSpacing(6);
        hboxLayout2->setObjectName(QString::fromUtf8("hboxLayout2"));
        uirts = new QCheckBox(ButtonGroup11);
        uirts->setObjectName(QString::fromUtf8("uirts"));
        uirts->setChecked(true);

        hboxLayout2->addWidget(uirts);

        uicts = new QCheckBox(ButtonGroup11);
        uicts->setObjectName(QString::fromUtf8("uicts"));

        hboxLayout2->addWidget(uicts);

        uidsr = new QCheckBox(ButtonGroup11);
        uidsr->setObjectName(QString::fromUtf8("uidsr"));

        hboxLayout2->addWidget(uidsr);

        uidtr = new QCheckBox(ButtonGroup11);
        uidtr->setObjectName(QString::fromUtf8("uidtr"));

        hboxLayout2->addWidget(uidtr);

        spacer3 = new QSpacerItem(201, 21, QSizePolicy::Expanding, QSizePolicy::Minimum);

        hboxLayout2->addItem(spacer3);


        gridLayout->addLayout(hboxLayout2, 4, 0, 1, 4);


        vboxLayout->addWidget(ButtonGroup11);

        ui_protocol = new Q3ButtonGroup(UIDmmPrefs);
        ui_protocol->setObjectName(QString::fromUtf8("ui_protocol"));
        ui_protocol->setColumnLayout(0, Qt::Vertical);
        ui_protocol->layout()->setSpacing(5);
        ui_protocol->layout()->setContentsMargins(10, 10, 10, 10);
        gridLayout1 = new QGridLayout();
        QBoxLayout *boxlayout1 = qobject_cast<QBoxLayout *>(ui_protocol->layout());
        if (boxlayout1)
            boxlayout1->addLayout(gridLayout1);
        gridLayout1->setAlignment(Qt::AlignTop);
        gridLayout1->setObjectName(QString::fromUtf8("gridLayout1"));
        protocolCombo = new QComboBox(ui_protocol);
        protocolCombo->setObjectName(QString::fromUtf8("protocolCombo"));

        gridLayout1->addWidget(protocolCombo, 0, 0, 1, 3);

        TextLabel1_4 = new QLabel(ui_protocol);
        TextLabel1_4->setObjectName(QString::fromUtf8("TextLabel1_4"));
        TextLabel1_4->setWordWrap(false);

        gridLayout1->addWidget(TextLabel1_4, 1, 0, 1, 1);

        ui_numValues = new QSpinBox(ui_protocol);
        ui_numValues->setObjectName(QString::fromUtf8("ui_numValues"));
        ui_numValues->setMaximum(4);
        ui_numValues->setMinimum(1);

        gridLayout1->addWidget(ui_numValues, 1, 1, 1, 1);

        Spacer1 = new QSpacerItem(20, 20, QSizePolicy::Expanding, QSizePolicy::Minimum);

        gridLayout1->addItem(Spacer1, 1, 2, 1, 1);


        vboxLayout->addWidget(ui_protocol);

        Spacer1_3 = new QSpacerItem(20, 30, QSizePolicy::Minimum, QSizePolicy::Expanding);

        vboxLayout->addItem(Spacer1_3);

        message2 = new QLabel(UIDmmPrefs);
        message2->setObjectName(QString::fromUtf8("message2"));
        QSizePolicy sizePolicy2(static_cast<QSizePolicy::Policy>(1), static_cast<QSizePolicy::Policy>(3));
        sizePolicy2.setHorizontalStretch(0);
        sizePolicy2.setVerticalStretch(0);
        sizePolicy2.setHeightForWidth(message2->sizePolicy().hasHeightForWidth());
        message2->setSizePolicy(sizePolicy2);
        message2->setTextFormat(Qt::RichText);
        message2->setAlignment(Qt::AlignBottom|Qt::AlignLeft);
        message2->setWordWrap(true);

        vboxLayout->addWidget(message2);

        message = new QLabel(UIDmmPrefs);
        message->setObjectName(QString::fromUtf8("message"));
        sizePolicy2.setHeightForWidth(message->sizePolicy().hasHeightForWidth());
        message->setSizePolicy(sizePolicy2);
        message->setTextFormat(Qt::RichText);
        message->setAlignment(Qt::AlignBottom|Qt::AlignLeft);
        message->setWordWrap(true);

        vboxLayout->addWidget(message);

#ifndef QT_NO_SHORTCUT
        ui_parityLabel->setBuddy(stopBitsCombo);
        ui_bitsLabel->setBuddy(bitsCombo);
        TextLabel2->setBuddy(port);
        ui_displayLabel->setBuddy(stopBitsCombo);
        ui_stopLabel->setBuddy(stopBitsCombo);
        ui_baudLabel->setBuddy(baudRate);
        TextLabel1_4->setBuddy(ui_numValues);
#endif // QT_NO_SHORTCUT
        QWidget::setTabOrder(ui_model, port);
        QWidget::setTabOrder(port, baudRate);
        QWidget::setTabOrder(baudRate, bitsCombo);
        QWidget::setTabOrder(bitsCombo, stopBitsCombo);
        QWidget::setTabOrder(stopBitsCombo, parityCombo);
        QWidget::setTabOrder(parityCombo, displayCombo);
        QWidget::setTabOrder(displayCombo, protocolCombo);
        QWidget::setTabOrder(protocolCombo, ui_numValues);

        retranslateUi(UIDmmPrefs);

        port->setCurrentIndex(0);
        baudRate->setCurrentIndex(0);


        QMetaObject::connectSlotsByName(UIDmmPrefs);
    } // setupUi

    void retranslateUi(PrefWidget *UIDmmPrefs)
    {
        UIDmmPrefs->setCaption(QApplication::translate("UIDmmPrefs", "QFrameForm", 0, QApplication::UnicodeUTF8));
        ui_hint->setText(QApplication::translate("UIDmmPrefs", "<b>Select yor DMM or set parameter manually</b>", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_WHATSTHIS
        ui_model->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Here you may select your DMM model. If your DMM is not in the list, try to find working settings and mail them to me (<font color=blue><u>qtdmm@mtoussaint.de</u></font>). So I can add them to the list in the next release.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        ui_load->setText(QString());
#ifndef QT_NO_TOOLTIP
        ui_load->setProperty("toolTip", QVariant(QApplication::translate("UIDmmPrefs", "Load Settings", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_TOOLTIP
        ui_save->setText(QString());
#ifndef QT_NO_TOOLTIP
        ui_save->setProperty("toolTip", QVariant(QApplication::translate("UIDmmPrefs", "Save Settings", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_TOOLTIP
        ButtonGroup11->setTitle(QApplication::translate("UIDmmPrefs", "Port settings", 0, QApplication::UnicodeUTF8));
        ui_parityLabel->setText(QApplication::translate("UIDmmPrefs", "Parit&y", 0, QApplication::UnicodeUTF8));
        parityCombo->clear();
        parityCombo->insertItems(0, QStringList()
         << QApplication::translate("UIDmmPrefs", "None", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "Even", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "Odd", 0, QApplication::UnicodeUTF8)
        );
#ifndef QT_NO_WHATSTHIS
        parityCombo->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Parity for serial communication. May be None, Odd or Even.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        displayCombo->clear();
        displayCombo->insertItems(0, QStringList()
         << QApplication::translate("UIDmmPrefs", "2000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "4000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "20000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "50000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "100000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "200000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "400000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "1000000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "6000", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "40000", 0, QApplication::UnicodeUTF8)
        );
#ifndef QT_NO_WHATSTHIS
        displayCombo->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Number of display digits.\n"
"<ul><li>3 1/2 - 2000 Counts</li>\n"
"<li>3 3/4 - 4000 Counts</li>\n"
"<li>4 1/2 - 20000 Counts</li>\n"
"<li>4 3/4 - 40000 Counts</li>\n"
"</ul>", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        bitsCombo->clear();
        bitsCombo->insertItems(0, QStringList()
         << QApplication::translate("UIDmmPrefs", "5 bits", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "6 bits", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "7 bits", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "8 bits", 0, QApplication::UnicodeUTF8)
        );
#ifndef QT_NO_WHATSTHIS
        bitsCombo->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Number of bits for serial communication.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        ui_bitsLabel->setText(QApplication::translate("UIDmmPrefs", "&Bits:", 0, QApplication::UnicodeUTF8));
        stopBitsCombo->clear();
        stopBitsCombo->insertItems(0, QStringList()
         << QApplication::translate("UIDmmPrefs", "1 Stop bit", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "2 Stop bits", 0, QApplication::UnicodeUTF8)
        );
#ifndef QT_NO_WHATSTHIS
        stopBitsCombo->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Number of stop bits for serial communication.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        TextLabel2->setText(QApplication::translate("UIDmmPrefs", "&Port:", 0, QApplication::UnicodeUTF8));
        port->clear();
        port->insertItems(0, QStringList()
         << QApplication::translate("UIDmmPrefs", "/dev/ttyS", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "/dev/usb/ttyUSB", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "/dev/ttyUSB", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "/dev/tty.usbserial", 0, QApplication::UnicodeUTF8)
        );
#ifndef QT_NO_WHATSTHIS
        port->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Choose the serial device here. <i>(Hint for DOS people: /dev/ttyS0 corresponds to COM1. /dev/ttyS1 to COM2 ...)</i>", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
#ifndef QT_NO_WHATSTHIS
        portNumber->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Enter the number of the port.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        ui_scanPorts->setText(QApplication::translate("UIDmmPrefs", "Scan", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_WHATSTHIS
        ui_scanPorts->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Clicke here to scan for new devices.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        baudRate->clear();
        baudRate->insertItems(0, QStringList()
         << QApplication::translate("UIDmmPrefs", "600 baud", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "1200 baud", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "1800 baud", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "2400 baud", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "4800 baud", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "9600 baud", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "19200 baud", 0, QApplication::UnicodeUTF8)
        );
#ifndef QT_NO_WHATSTHIS
        baudRate->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Select the baud rate for the DMM here. If you encounter problems connecting to your DMM try lowering the baud rate. I had some problems with my <b>Metex ME-32</b>. The Documentation said 1200 baud but it only worked at 600.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        ui_displayLabel->setText(QApplication::translate("UIDmmPrefs", "&Digits", 0, QApplication::UnicodeUTF8));
        ui_stopLabel->setText(QApplication::translate("UIDmmPrefs", "&Stop bits:", 0, QApplication::UnicodeUTF8));
        ui_baudLabel->setText(QApplication::translate("UIDmmPrefs", "Baud &rate:", 0, QApplication::UnicodeUTF8));
        ui_externalSetup->setText(QApplication::translate("UIDmmPrefs", "External device setup", 0, QApplication::UnicodeUTF8));
        uirts->setText(QApplication::translate("UIDmmPrefs", "RTS", 0, QApplication::UnicodeUTF8));
        uicts->setText(QApplication::translate("UIDmmPrefs", "CTS", 0, QApplication::UnicodeUTF8));
        uidsr->setText(QApplication::translate("UIDmmPrefs", "DSR", 0, QApplication::UnicodeUTF8));
        uidtr->setText(QApplication::translate("UIDmmPrefs", "DTR", 0, QApplication::UnicodeUTF8));
        ui_protocol->setTitle(QApplication::translate("UIDmmPrefs", "Protocol", 0, QApplication::UnicodeUTF8));
        protocolCombo->clear();
        protocolCombo->insertItems(0, QStringList()
         << QApplication::translate("UIDmmPrefs", "14 bytes ASCII, polling (Metex/Voltcraft)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "11 bytes ASCII, continuous (PeakTech 451)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "14 bytes ASCII, continuous (Voltcraft)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "15 bytes ASCII, continuous (Voltcraft)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "11 bytes binary, continuous (M9803R)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "14 bytes binary, continuous (VC820)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "22 bytes ASCII, continuous (IsoTech)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "11 bytes binary, continuous (VC940)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "14 bytes ASCII/binary, continuous (QM1537)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "9 bytes binary, continuous (RS 22-812)", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("UIDmmPrefs", "15 bytes binary, continuous (DTM0660)", 0, QApplication::UnicodeUTF8)
        );
#ifndef QT_NO_WHATSTHIS
        protocolCombo->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Here you may select the Communication type. If you have a not \"officially\" supported multimeter, just try out the existing protocols. If you are lucky it may work. If you find working settings, send the to me.", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        TextLabel1_4->setText(QApplication::translate("UIDmmPrefs", "&Number of values:", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_WHATSTHIS
        ui_numValues->setProperty("whatsThis", QVariant(QApplication::translate("UIDmmPrefs", "Some multimeter send several lines of data containing different measured values. As QtDMM only shows one variable here you can set the number of lines to be ignored for each measurement (That means that QtDMM only uses the first line).", 0, QApplication::UnicodeUTF8)));
#endif // QT_NO_WHATSTHIS
        message2->setText(QApplication::translate("UIDmmPrefs", "These protocoll settings have not been confirmed by a user yet. If you own this model and can confirm that it works. Please give me a note. <u><font color=blue>qtdmm@mtoussaint.de</font></u>", 0, QApplication::UnicodeUTF8));
        message->setText(QApplication::translate("UIDmmPrefs", "If you have a DMM not listed above and find manual settings that work, please report to <font color=blue><u>qtdmm@mtoussaint.de</u></font>. This way future users of this DMM can benefit from your help.", 0, QApplication::UnicodeUTF8));
    } // retranslateUi


protected:
    enum IconID
    {
        image0_ID,
        image1_ID,
        image2_ID,
        unknown_ID
    };
    static QPixmap qt_get_icon(IconID id)
    {
    static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x03,
    0xa7, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x95, 0xdb, 0x6b, 0xdc,
    0x45, 0x14, 0xc7, 0x3f, 0xbf, 0xdf, 0xfe, 0xe2, 0x6e, 0x9a, 0xdb, 0x36,
    0x31, 0x49, 0x63, 0x6d, 0x13, 0x2a, 0xb6, 0x22, 0x49, 0xa4, 0x60, 0xa9,
    0x54, 0x2b, 0x22, 0xf1, 0x41, 0x14, 0xd4, 0x10, 0xa8, 0x48, 0xfb, 0x60,
    0x41, 0x04, 0x09, 0x3e, 0xfa, 0xe0, 0xdd, 0x17, 0xdf, 0x7c, 0xa8, 0x7f,
    0x80, 0x14, 0xec, 0x83, 0x0f, 0xd2, 0x2a, 0x54, 0x8a, 0x90, 0xa8, 0x6d,
    0x64, 0x6b, 0x83, 0xa5, 0xde, 0x5a, 0x25, 0x06, 0x49, 0x9a, 0x26, 0x4d,
    0xb2, 0x9b, 0xcd, 0xe6, 0xb2, 0xbf, 0xcb, 0x5c, 0xce, 0xf8, 0xb0, 0x31,
    0x71, 0xad, 0x41, 0x11, 0x33, 0x30, 0xcc, 0x61, 0x66, 0xce, 0x67, 0xce,
    0x7c, 0xe7, 0xcc, 0x8c, 0x97, 0xcb, 0xe5, 0xd8, 0x8a, 0xe2, 0x6f, 0x09,
    0xf5, 0xbf, 0x82, 0xcf, 0x9c, 0xf3, 0xdd, 0xd9, 0xe1, 0xc0, 0xfd, 0xaf,
    0xe0, 0x91, 0xd1, 0x3a, 0x77, 0xfc, 0x58, 0x37, 0xc7, 0x8f, 0x76, 0x73,
    0xea, 0xb4, 0xdd, 0x14, 0xfe, 0xaf, 0xc1, 0x67, 0x87, 0x03, 0x17, 0xa9,
    0x3d, 0x6e, 0xf0, 0x85, 0x5e, 0x5a, 0xb2, 0x69, 0x5a, 0xb2, 0x69, 0x7a,
    0xee, 0x6d, 0xdf, 0x74, 0xbe, 0xd7, 0xf9, 0xfc, 0xcf, 0xee, 0xe9, 0x47,
    0xda, 0x10, 0x01, 0x65, 0x41, 0x1b, 0x41, 0x19, 0xf8, 0xf8, 0xdc, 0x34,
    0x5f, 0xbc, 0x16, 0x7a, 0x9f, 0x5f, 0xa8, 0x71, 0x5d, 0x77, 0x66, 0x79,
    0xec, 0xd1, 0x4e, 0x9a, 0x1a, 0x6a, 0x30, 0xc6, 0xa1, 0xb5, 0xc5, 0x18,
    0x47, 0x26, 0x93, 0xe2, 0xf5, 0x77, 0x2f, 0x71, 0xb4, 0x1f, 0xef, 0xaf,
    0xe0, 0x60, 0x77, 0x6b, 0x9a, 0x63, 0x03, 0xcd, 0x28, 0x03, 0xb1, 0x05,
    0x65, 0x20, 0xd1, 0x70, 0xa8, 0xa7, 0x8e, 0x4f, 0x2f, 0x8c, 0xb9, 0xfe,
    0xbe, 0x5d, 0xdc, 0xbf, 0xbf, 0x19, 0xad, 0x41, 0xa9, 0x6a, 0xe7, 0x28,
    0x32, 0x3c, 0x3b, 0xb0, 0x8f, 0xb7, 0xde, 0xff, 0xc1, 0xbd, 0x33, 0x98,
    0xae, 0x82, 0x07, 0xce, 0x55, 0xcb, 0x64, 0x14, 0xcc, 0x8c, 0x4e, 0xd3,
    0x60, 0x62, 0xde, 0x7c, 0xf9, 0x3e, 0xb6, 0xd5, 0x82, 0xb5, 0x7f, 0xbf,
    0x5d, 0x11, 0x47, 0xf7, 0xde, 0x2c, 0x87, 0xf7, 0x37, 0x03, 0xe5, 0xea,
    0x88, 0xad, 0x6c, 0x80, 0x4b, 0xd7, 0x23, 0xa6, 0x2f, 0x4f, 0xf0, 0x64,
    0x5f, 0x17, 0x5d, 0xbb, 0x6b, 0x37, 0xd5, 0x0f, 0x60, 0x71, 0xd5, 0x70,
    0xe2, 0x93, 0x39, 0x70, 0x0e, 0xad, 0xeb, 0x38, 0xf2, 0xf6, 0xa2, 0x9b,
    0x9a, 0xf3, 0x40, 0x04, 0x9c, 0x23, 0xf8, 0x73, 0x34, 0xcb, 0xb3, 0xcb,
    0x1c, 0x3a, 0xd0, 0xf1, 0x8f, 0xd0, 0x52, 0x59, 0x78, 0xe2, 0x8d, 0x31,
    0xfa, 0x1e, 0xba, 0x83, 0x3d, 0xbb, 0xea, 0x11, 0x81, 0xae, 0x7d, 0x3b,
    0x58, 0x29, 0x5b, 0xb4, 0x81, 0x13, 0xef, 0x7d, 0x4b, 0x60, 0x65, 0xc3,
    0xc1, 0xdf, 0xd9, 0xc6, 0xab, 0x1f, 0xfc, 0xc4, 0xc1, 0x03, 0x82, 0xb3,
    0x60, 0xc5, 0x62, 0xad, 0x20, 0xc6, 0x21, 0xd6, 0x61, 0xd6, 0xec, 0xcf,
    0xbe, 0x29, 0x32, 0xf0, 0x78, 0x27, 0xb7, 0xb5, 0x66, 0x39, 0x3f, 0x59,
    0x09, 0x32, 0x9d, 0x81, 0xef, 0xaf, 0x2c, 0x31, 0x35, 0x3c, 0x7e, 0xab,
    0x14, 0x67, 0x86, 0xf2, 0x74, 0xdd, 0xdd, 0x4a, 0xef, 0xce, 0x80, 0xed,
    0xb7, 0x6f, 0x23, 0x14, 0x47, 0xa4, 0x1c, 0x91, 0x82, 0x30, 0x76, 0x84,
    0x5a, 0x88, 0x63, 0x78, 0x71, 0xef, 0x0e, 0x92, 0x9a, 0x80, 0xd1, 0xdf,
    0x2a, 0x50, 0xcf, 0x87, 0x85, 0xc9, 0x88, 0xf9, 0x8b, 0x13, 0x20, 0xab,
    0xe4, 0x4e, 0xd6, 0x7a, 0x55, 0xe0, 0xa1, 0x91, 0x79, 0xc6, 0x4e, 0x75,
    0xb3, 0x30, 0xaf, 0x69, 0x6a, 0x09, 0x90, 0x7a, 0xc8, 0xaf, 0x40, 0x61,
    0x05, 0x26, 0x6f, 0xc2, 0xea, 0x22, 0x14, 0x12, 0x28, 0xcc, 0x43, 0xb1,
    0x64, 0x29, 0xe4, 0x13, 0xc2, 0x85, 0x55, 0x6e, 0x5e, 0x9d, 0xa7, 0x34,
    0x53, 0x86, 0xd8, 0x83, 0x86, 0x8a, 0xb6, 0x81, 0x31, 0x15, 0xe8, 0x97,
    0xa3, 0x11, 0x87, 0x7b, 0x1a, 0xa9, 0xcd, 0x40, 0x4d, 0x5b, 0x0d, 0x57,
    0xc6, 0x96, 0x69, 0xdd, 0xdd, 0xc8, 0xd8, 0x0d, 0x18, 0x9f, 0x84, 0xd9,
    0xbc, 0x21, 0x5f, 0xb0, 0xcc, 0x15, 0x0c, 0xf9, 0x82, 0x21, 0x2c, 0x45,
    0x44, 0xa5, 0x32, 0xa5, 0x99, 0x45, 0x9c, 0x72, 0x10, 0x02, 0x81, 0x05,
    0xd6, 0xc0, 0xb2, 0x96, 0x6e, 0xe7, 0x2f, 0x15, 0xe9, 0x7f, 0xb0, 0x99,
    0xb2, 0xc0, 0x5c, 0x02, 0xf3, 0x7e, 0x23, 0xbf, 0x7c, 0x67, 0x11, 0x97,
    0x22, 0x8c, 0x1d, 0x4a, 0x41, 0xac, 0x84, 0x44, 0x39, 0xe2, 0x44, 0x28,
    0xe4, 0x43, 0x74, 0xa8, 0xa1, 0xae, 0x0e, 0x6c, 0x02, 0x24, 0x90, 0x52,
    0xe0, 0x2a, 0x87, 0xe6, 0x8b, 0x15, 0x96, 0xcb, 0xf0, 0xe3, 0xb5, 0x12,
    0x47, 0xfa, 0xea, 0x19, 0x2b, 0xc2, 0x8d, 0x22, 0xc4, 0x40, 0x71, 0x45,
    0x58, 0x5a, 0x15, 0x12, 0xed, 0x88, 0x95, 0x43, 0x69, 0x28, 0x2d, 0x69,
    0x66, 0x67, 0x43, 0x6c, 0x90, 0xc6, 0xcf, 0xa4, 0xab, 0xd3, 0x25, 0x65,
    0xc8, 0x7d, 0xd8, 0xe8, 0xad, 0x1d, 0x1e, 0x0c, 0x5d, 0x5c, 0xe1, 0xe1,
    0xde, 0x26, 0x66, 0x57, 0xa1, 0x3e, 0x80, 0x8e, 0x0c, 0xd4, 0x5b, 0x68,
    0xec, 0x08, 0x58, 0x2a, 0x2a, 0x4c, 0xe0, 0xd1, 0x2c, 0x86, 0x46, 0x1d,
    0xd3, 0xd0, 0xae, 0xb8, 0x2b, 0x9b, 0x42, 0x92, 0x04, 0x09, 0x13, 0x4c,
    0xa2, 0x89, 0x42, 0x43, 0x7e, 0x41, 0x98, 0x9c, 0xd2, 0xeb, 0x6b, 0x04,
    0xc6, 0x3a, 0xbe, 0xca, 0x2d, 0xf0, 0xca, 0x33, 0xed, 0xdc, 0xd3, 0xb0,
    0xd6, 0xbb, 0x1d, 0xb4, 0x86, 0x38, 0x76, 0x68, 0xed, 0x93, 0x24, 0x86,
    0x24, 0xb1, 0x28, 0xe5, 0xa3, 0x54, 0x40, 0x1c, 0x1b, 0xb4, 0x0e, 0x88,
    0xe3, 0x5a, 0x94, 0xaa, 0x41, 0xa9, 0x0c, 0xa7, 0x47, 0x96, 0x38, 0x79,
    0x7d, 0x23, 0x11, 0xfc, 0x72, 0x68, 0x98, 0x98, 0x5c, 0xe1, 0xa9, 0x83,
    0xd5, 0x97, 0xc2, 0xf7, 0x21, 0x08, 0x7c, 0x52, 0x29, 0x0f, 0xdf, 0xf7,
    0xd7, 0x6c, 0x7f, 0xdd, 0xf6, 0xfd, 0xca, 0xd8, 0x1f, 0xf6, 0xd7, 0x57,
    0x23, 0x72, 0x1f, 0x65, 0xd7, 0xdf, 0x8b, 0x60, 0x61, 0xa6, 0xcc, 0x4b,
    0xcf, 0x75, 0xde, 0x72, 0xbb, 0x52, 0xa9, 0x4a, 0x75, 0x38, 0x44, 0x0c,
    0x89, 0xd2, 0x44, 0x71, 0x42, 0x14, 0x69, 0xc2, 0x50, 0x11, 0x27, 0x09,
    0x71, 0xa4, 0xd1, 0x5a, 0x48, 0xb4, 0x61, 0xfc, 0xd7, 0x10, 0x68, 0xda,
    0x90, 0x02, 0xdf, 0x63, 0xf8, 0x72, 0x91, 0x07, 0x06, 0x97, 0x70, 0xe2,
    0x10, 0x01, 0xc4, 0x21, 0x22, 0x58, 0x2b, 0x58, 0x2d, 0x18, 0x63, 0xb0,
    0x46, 0xb0, 0xc6, 0x60, 0x8c, 0xc5, 0x68, 0x8b, 0x18, 0xa9, 0xb4, 0x62,
    0x29, 0x87, 0x0e, 0xc2, 0xea, 0xc7, 0xcc, 0xdb, 0xaa, 0xcf, 0xf4, 0x77,
    0x97, 0x72, 0x1a, 0x4f, 0x2e, 0xf8, 0x08, 0x4a, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

    static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0xa2, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xb5, 0x94, 0xbd, 0x6f, 0x5c,
    0x55, 0x10, 0xc5, 0x7f, 0xcf, 0x1f, 0x49, 0x61, 0x05, 0x29, 0x8e, 0x03,
    0x29, 0xa0, 0xe2, 0x5f, 0x48, 0x41, 0x41, 0x85, 0xe8, 0x11, 0xa4, 0xa0,
    0x20, 0x12, 0x12, 0x15, 0x65, 0xe8, 0x53, 0xa1, 0x50, 0x20, 0x21, 0xe1,
    0x8a, 0x1a, 0x09, 0x29, 0x05, 0x08, 0x52, 0xd0, 0x50, 0x20, 0x51, 0xb1,
    0x2d, 0x42, 0x8a, 0xe8, 0xc3, 0x47, 0xb0, 0x63, 0xa3, 0xc4, 0x26, 0xeb,
    0xf8, 0xbd, 0x3b, 0x73, 0x0e, 0xc5, 0xbd, 0xfb, 0xb2, 0x6b, 0x2f, 0x09,
    0x14, 0x19, 0xe9, 0xe9, 0xad, 0xf6, 0xde, 0xfb, 0x9b, 0x73, 0xcf, 0xcc,
    0xbc, 0x6e, 0x32, 0x99, 0x70, 0xf3, 0xd6, 0x6d, 0x9b, 0x1a, 0xb6, 0xdb,
    0xd3, 0x7e, 0x03, 0x36, 0x48, 0x6a, 0xeb, 0x00, 0x75, 0x5d, 0x6d, 0x1f,
    0x98, 0xf7, 0xaf, 0x5e, 0xee, 0x98, 0x8b, 0xb5, 0x9b, 0xb7, 0x6e, 0xfb,
    0x8d, 0x37, 0x5f, 0x43, 0x36, 0xaf, 0xbf, 0xf2, 0x32, 0xfb, 0xf7, 0x7b,
    0x56, 0x57, 0x3b, 0xd6, 0x56, 0x3b, 0xce, 0x6d, 0xac, 0xf3, 0xb4, 0xb8,
    0xf1, 0xd9, 0xf7, 0x48, 0xe6, 0xda, 0xf5, 0x6f, 0xbc, 0x7d, 0xe3, 0xad,
    0x11, 0xbe, 0x66, 0x40, 0xaa, 0x2a, 0x01, 0x3e, 0xf8, 0xf0, 0xab, 0xf1,
    0xd0, 0x17, 0x9f, 0x5e, 0x5d, 0x0a, 0xb3, 0x4d, 0x64, 0x7d, 0xc6, 0xff,
    0xda, 0x8d, 0x46, 0x30, 0x86, 0xc8, 0xc4, 0x8f, 0xf7, 0xf0, 0xee, 0xdb,
    0xaf, 0x12, 0x8a, 0xa5, 0x50, 0xd9, 0x44, 0x98, 0xbe, 0x08, 0xc9, 0x44,
    0x88, 0x7b, 0xf7, 0x0e, 0x89, 0x38, 0x01, 0x36, 0x35, 0xb3, 0xe7, 0xc8,
    0x26, 0x59, 0xe9, 0xba, 0x93, 0x4c, 0x4a, 0x88, 0xa1, 0x88, 0x48, 0x53,
    0x22, 0xe9, 0x87, 0xe4, 0x8f, 0xbb, 0x0f, 0x28, 0x43, 0x39, 0xb5, 0x77,
    0xcd, 0x86, 0x88, 0xaa, 0x38, 0xc2, 0x7c, 0xfe, 0xc9, 0x3b, 0x74, 0x1d,
    0x74, 0x5d, 0xb7, 0x70, 0x8b, 0x12, 0xa2, 0x44, 0x85, 0x1e, 0xf7, 0x41,
    0x3f, 0x04, 0x3f, 0xfd, 0xb2, 0xc7, 0x50, 0x62, 0x2c, 0xec, 0x09, 0xb0,
    0x19, 0x4a, 0x02, 0xf0, 0xe5, 0x77, 0x3f, 0x93, 0x59, 0x0f, 0xa7, 0x44,
    0x89, 0x40, 0x69, 0x22, 0x92, 0x12, 0x22, 0x53, 0xa4, 0x84, 0x52, 0x3c,
    0x9c, 0x0e, 0xec, 0xec, 0x1e, 0xa0, 0x14, 0x9e, 0xf3, 0x7a, 0xce, 0x0a,
    0xea, 0xa2, 0x21, 0xb2, 0x1e, 0x96, 0xbc, 0x00, 0x8d, 0x10, 0x99, 0x49,
    0xca, 0x64, 0xd4, 0xf7, 0xce, 0xee, 0x01, 0x29, 0xe1, 0xd4, 0x82, 0x8d,
    0x23, 0x18, 0x43, 0x89, 0xc4, 0xcc, 0xc0, 0x49, 0x36, 0x75, 0xca, 0x7a,
    0x7d, 0x49, 0x73, 0x50, 0x31, 0x0c, 0x59, 0xc5, 0xc8, 0x18, 0xa3, 0x25,
    0xe0, 0x15, 0x03, 0x43, 0x24, 0x92, 0x5b, 0xdb, 0xb5, 0xf6, 0x83, 0x13,
    0x43, 0x52, 0xdf, 0x18, 0x4c, 0xc7, 0xd6, 0xc5, 0xe7, 0xd8, 0xda, 0x3a,
    0x57, 0xeb, 0xb0, 0x54, 0x31, 0xae, 0xbe, 0x86, 0x78, 0xef, 0xca, 0xe5,
    0xda, 0x15, 0x6d, 0xaa, 0xb2, 0x79, 0x2d, 0xcd, 0x7c, 0x37, 0x92, 0xb8,
    0x7f, 0x18, 0x0c, 0x51, 0x2d, 0xf8, 0x78, 0xfb, 0x5b, 0xe4, 0xa5, 0xc5,
    0x83, 0xd2, 0x8a, 0x37, 0x4b, 0xfc, 0x6f, 0xd0, 0x08, 0x11, 0x29, 0xf6,
    0x1f, 0x4c, 0x91, 0xcc, 0xd9, 0xb3, 0x67, 0x48, 0x65, 0xbd, 0xc6, 0x69,
    0xc5, 0x90, 0x39, 0xfb, 0x0e, 0x98, 0xdf, 0x76, 0xf6, 0xaa, 0x32, 0x43,
    0x66, 0x56, 0x68, 0xbb, 0x51, 0x4a, 0x1c, 0x3e, 0x0c, 0x8e, 0x8e, 0x83,
    0x34, 0xbc, 0xb0, 0xb9, 0x89, 0x31, 0x4b, 0x04, 0xcf, 0x26, 0xaf, 0x66,
    0x34, 0xf0, 0xe2, 0xa5, 0x8b, 0xa3, 0xda, 0x08, 0x51, 0x1a, 0x34, 0x52,
    0x1c, 0x4c, 0x07, 0x1e, 0x0d, 0x47, 0x6c, 0xac, 0xd4, 0xa2, 0xf6, 0x25,
    0x97, 0x42, 0x47, 0xc5, 0x25, 0x62, 0xb4, 0xe2, 0xce, 0xdd, 0xdd, 0xc7,
    0xe0, 0x14, 0xa5, 0x08, 0xb9, 0x2a, 0x9d, 0x3e, 0x8a, 0x96, 0xc8, 0x64,
    0x26, 0x5b, 0x9b, 0x17, 0x96, 0x53, 0xc7, 0xe2, 0xb5, 0x39, 0x97, 0xcc,
    0x4b, 0x97, 0x9e, 0x5f, 0x50, 0xfb, 0xf7, 0x74, 0xe0, 0xcf, 0xfd, 0x29,
    0xeb, 0x67, 0x92, 0x8d, 0x4e, 0x0c, 0xa5, 0xda, 0x23, 0xd7, 0xc4, 0x4f,
    0x00, 0x33, 0xf6, 0xa1, 0x6d, 0xee, 0xec, 0xec, 0x51, 0x4a, 0x72, 0x74,
    0x1c, 0xf4, 0x7d, 0xd2, 0x97, 0xa4, 0x84, 0xe9, 0x4b, 0x50, 0x4a, 0xf3,
    0xba, 0x0d, 0xd1, 0x85, 0xf3, 0xe7, 0x9f, 0x0c, 0xce, 0xa8, 0x5d, 0xf1,
    0xc3, 0x8f, 0xbf, 0x37, 0xe5, 0x55, 0xcd, 0x4c, 0x79, 0x66, 0x55, 0x9f,
    0xe1, 0xb1, 0xb0, 0x16, 0xfc, 0x7a, 0xf8, 0x17, 0x6a, 0xf5, 0x59, 0x5f,
    0x5f, 0x5d, 0x00, 0x77, 0x93, 0xc9, 0x84, 0x6b, 0xd7, 0xbf, 0x5e, 0xec,
    0x97, 0xd3, 0xdd, 0xf3, 0xd4, 0xd8, 0xfe, 0xe8, 0xca, 0xc2, 0xe7, 0xb0,
    0x9b, 0x4c, 0x26, 0xff, 0x9f, 0xf2, 0x1f, 0x62, 0xe5, 0x99, 0x50, 0x9f,
    0x25, 0xf8, 0x1f, 0xed, 0xcc, 0xa6, 0x20, 0x70, 0xce, 0x49, 0x8c, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

    static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xc7, 0x49, 0x44, 0x41, 0x54, 0x38, 0x8d, 0xad, 0x55, 0xdb, 0x11, 0x84,
    0x20, 0x0c, 0x4c, 0x18, 0x0b, 0xb8, 0x1a, 0x28, 0xc7, 0x3a, 0xad, 0x81,
    0x12, 0x28, 0xc3, 0x56, 0xf4, 0x2b, 0x37, 0x92, 0xdb, 0x3c, 0xc0, 0xdb,
    0x2f, 0xc7, 0x24, 0xbb, 0x79, 0x01, 0xdc, 0x7b, 0x27, 0x0f, 0x27, 0xed,
    0x17, 0xfa, 0x5f, 0xa9, 0xb1, 0x17, 0xb7, 0xcd, 0x90, 0x21, 0x1f, 0x4b,
    0xa0, 0xac, 0x90, 0x6a, 0x7f, 0x14, 0x53, 0xb4, 0xd3, 0x0c, 0xa9, 0x17,
    0xbb, 0x59, 0x06, 0x81, 0x55, 0x2a, 0xf2, 0x3f, 0x69, 0xbf, 0xc4, 0xff,
    0xa7, 0x15, 0x19, 0xd2, 0xc8, 0xf6, 0x25, 0x46, 0xea, 0x5e, 0xa0, 0x37,
    0x38, 0xb1, 0xc1, 0x8c, 0x33, 0xa4, 0xd1, 0x56, 0xf0, 0xd1, 0x3f, 0x43,
    0xb6, 0x19, 0x52, 0xe4, 0xaf, 0x6d, 0x6e, 0x8f, 0xb3, 0xa4, 0x08, 0xf0,
    0x80, 0x44, 0x84, 0x19, 0xa4, 0x33, 0xd6, 0x48, 0x6d, 0x85, 0x05, 0x2f,
    0xdb, 0xa8, 0x92, 0xa2, 0x95, 0xf5, 0xd4, 0x57, 0x85, 0xcd, 0x8c, 0x51,
    0xa9, 0xd6, 0xde, 0x6a, 0x81, 0x4a, 0x8d, 0x21, 0x31, 0xda, 0x51, 0xf9,
    0x8e, 0x7a, 0x3b, 0x64, 0xec, 0x9d, 0xa0, 0x4a, 0x8d, 0xb5, 0x3d, 0x43,
    0xbe, 0x3c, 0x3c, 0x0b, 0x22, 0xca, 0xcf, 0x17, 0xe4, 0xcd, 0xb5, 0xa9,
    0x31, 0x64, 0x9c, 0xed, 0xdf, 0x34, 0xb1, 0x90, 0xcf, 0x0a, 0xa0, 0x19,
    0xf0, 0x3f, 0x1f, 0xd3, 0xe7, 0x45, 0x7f, 0x03, 0xb5, 0xa6, 0x6c, 0x9e,
    0xd2, 0x6e, 0x86, 0x13, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

    switch (id) {
        case image0_ID:  { QImage img; img.loadFromData(image0_data, sizeof(image0_data), "PNG"); return QPixmap::fromImage(img); }
        case image1_ID:  { QImage img; img.loadFromData(image1_data, sizeof(image1_data), "PNG"); return QPixmap::fromImage(img); }
        case image2_ID:  { QImage img; img.loadFromData(image2_data, sizeof(image2_data), "PNG"); return QPixmap::fromImage(img); }
        default: return QPixmap();
    } // switch
    } // icon

};

namespace Ui {
    class UIDmmPrefs: public Ui_UIDmmPrefs {};
} // namespace Ui

QT_END_NAMESPACE

class UIDmmPrefs : public PrefWidget, public Ui::UIDmmPrefs
{
    Q_OBJECT

public:
    UIDmmPrefs(QWidget* parent = 0, const char* name = 0);
    ~UIDmmPrefs();

protected slots:
    virtual void languageChange();

};

#endif // UIDMMPREFS_H
